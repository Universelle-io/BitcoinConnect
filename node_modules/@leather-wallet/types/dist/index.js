"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  RpcErrorCode: () => RpcErrorCode,
  SignatureHash: () => SignatureHash
});
module.exports = __toCommonJS(src_exports);

// src/rpc/index.ts
var RpcErrorCode = /* @__PURE__ */ ((RpcErrorCode2) => {
  RpcErrorCode2[RpcErrorCode2["PARSE_ERROR"] = -32700] = "PARSE_ERROR";
  RpcErrorCode2[RpcErrorCode2["INVALID_REQUEST"] = -32600] = "INVALID_REQUEST";
  RpcErrorCode2[RpcErrorCode2["METHOD_NOT_FOUND"] = -32601] = "METHOD_NOT_FOUND";
  RpcErrorCode2[RpcErrorCode2["INVALID_PARAMS"] = -32602] = "INVALID_PARAMS";
  RpcErrorCode2[RpcErrorCode2["INTERNAL_ERROR"] = -32603] = "INTERNAL_ERROR";
  RpcErrorCode2[RpcErrorCode2["SERVER_ERROR"] = -32e3] = "SERVER_ERROR";
  RpcErrorCode2[RpcErrorCode2["USER_REJECTION"] = 4001] = "USER_REJECTION";
  RpcErrorCode2[RpcErrorCode2["METHOD_NOT_SUPPORTED"] = 4002] = "METHOD_NOT_SUPPORTED";
  return RpcErrorCode2;
})(RpcErrorCode || {});

// src/methods/sign-psbt.ts
var SignatureHash = /* @__PURE__ */ ((SignatureHash2) => {
  SignatureHash2[SignatureHash2["ALL"] = 1] = "ALL";
  SignatureHash2[SignatureHash2["NONE"] = 2] = "NONE";
  SignatureHash2[SignatureHash2["SINGLE"] = 3] = "SINGLE";
  SignatureHash2[SignatureHash2["ALL_ANYONECANPAY"] = 129] = "ALL_ANYONECANPAY";
  SignatureHash2[SignatureHash2["NONE_ANYONECANPAY"] = 130] = "NONE_ANYONECANPAY";
  SignatureHash2[SignatureHash2["SINGLE_ANYONECANPAY"] = 131] = "SINGLE_ANYONECANPAY";
  return SignatureHash2;
})(SignatureHash || {});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  RpcErrorCode,
  SignatureHash
});
