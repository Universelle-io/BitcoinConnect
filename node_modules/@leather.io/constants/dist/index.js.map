{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import type {\n  AccountDisplayPreference,\n  AccountDisplayPreferenceInfo,\n  BitcoinUnit,\n  BitcoinUnitInfo,\n  BtcCryptoAssetInfo,\n  StxCryptoAssetInfo,\n} from '@leather.io/models';\n\nexport const gaiaUrl = 'https://hub.blockstack.org';\n\nexport const ZERO_INDEX = 0;\n\nexport const HIRO_EXPLORER_URL = 'https://explorer.hiro.so';\nexport const ORD_IO_URL = 'https://ord.io';\n\nexport const HIGH_FEE_AMOUNT_STX = 5;\nexport const HIGH_FEE_WARNING_LEARN_MORE_URL_BTC = 'https://bitcoinfees.earn.com/';\nexport const HIGH_FEE_WARNING_LEARN_MORE_URL_STX =\n  'https://leather.gitbook.io/guides/transactions/fees';\n\nexport const DEFAULT_FEE_RATE = 400;\n\nexport const PERSISTENCE_CACHE_TIME = 1000 * 60 * 60 * 12; // 12 hours\n\nexport const BTC_DECIMALS = 8;\nexport const STX_DECIMALS = 6;\nexport const SATS_IN_BTC = 100_000_000;\n\n// Units of `Money` should be declared in their smallest unit. Similar to\n// Rosetta, we model currencies with their respective resolution\nexport const currencyDecimalsMap = {\n  BTC: BTC_DECIMALS,\n  STX: STX_DECIMALS,\n  USD: 2,\n  EUR: 2,\n  GBP: 2,\n  AUD: 2,\n  CAD: 2,\n  CNY: 2,\n  JPY: 0,\n  KRW: 0,\n} as const;\n\nexport const currencyNameMap = {\n  USD: 'United States Dollar',\n  EUR: 'Euro',\n  GBP: 'British Pound',\n  AUD: 'Australian Dollar',\n  CAD: 'Canadian Dollar',\n  CNY: 'Chinese Yuan',\n  JPY: 'Japanese Yen',\n  KRW: 'South Korean Won',\n} as const;\n\n// https://bitcoin.stackexchange.com/a/41082/139277\nexport const BTC_P2WPKH_DUST_AMOUNT = 294;\n\nexport const KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g;\n\nexport const DEFAULT_LIST_LIMIT = 50;\n\nexport const TOKEN_NAME_LENGTH = 4;\n\nexport const LEATHER_SUPPORT_URL = 'https://leather.io/contact';\n\nexport const LEATHER_GUIDES_URL = 'https://leather.io/guides';\n\nexport const LEATHER_GUIDES_CONNECT_DAPPS = `${LEATHER_GUIDES_URL}/connect-dapps`;\n\nexport const LEATHER_LEARN_URL = 'https://leather.io/learn';\n\nexport const LEATHER_API_URL = 'https://leather-api-gateway-staging.wallet-6d1.workers.dev';\n\nexport const bitcoinUnitsKeyedByName: Record<BitcoinUnit, BitcoinUnitInfo> = {\n  bitcoin: {\n    name: 'bitcoin',\n    symbol: 'BTC',\n    decimal: '1',\n  },\n  satoshi: {\n    name: 'satoshi',\n    symbol: 'sat',\n    decimal: '0.00000001',\n  },\n};\n\nexport enum AccountDisplayPreferenceType {\n  NativeSegwit = 'native-segwit',\n  Taproot = 'taproot',\n  Bns = 'bns',\n  Stacks = 'stacks',\n}\n\nexport const accountDisplayPreferencesKeyedByType: Record<\n  AccountDisplayPreference,\n  AccountDisplayPreferenceInfo\n> = {\n  [AccountDisplayPreferenceType.NativeSegwit]: {\n    type: 'native-segwit',\n    blockchain: 'bitcoin',\n    name: 'Native Segwit address',\n  },\n  [AccountDisplayPreferenceType.Taproot]: {\n    type: 'taproot',\n    blockchain: 'bitcoin',\n    name: 'Taproot address',\n  },\n  [AccountDisplayPreferenceType.Bns]: {\n    type: 'bns',\n    blockchain: 'stacks',\n    name: 'BNS name',\n  },\n  [AccountDisplayPreferenceType.Stacks]: {\n    type: 'stacks',\n    blockchain: 'stacks',\n    name: 'Stacks address',\n  },\n};\n\nexport const btcCryptoAsset: BtcCryptoAssetInfo = {\n  chain: 'bitcoin',\n  protocol: 'nativeBtc',\n  symbol: 'BTC',\n  category: 'fungible',\n  decimals: 8,\n  hasMemo: false,\n};\n\nexport const stxCryptoAsset: StxCryptoAssetInfo = {\n  chain: 'stacks',\n  protocol: 'nativeStx',\n  symbol: 'STX',\n  category: 'fungible',\n  decimals: 6,\n  hasMemo: false,\n};\n"],"mappings":";AASO,IAAM,UAAU;AAEhB,IAAM,aAAa;AAEnB,IAAM,oBAAoB;AAC1B,IAAM,aAAa;AAEnB,IAAM,sBAAsB;AAC5B,IAAM,sCAAsC;AAC5C,IAAM,sCACX;AAEK,IAAM,mBAAmB;AAEzB,IAAM,yBAAyB,MAAO,KAAK,KAAK;AAEhD,IAAM,eAAe;AACrB,IAAM,eAAe;AACrB,IAAM,cAAc;AAIpB,IAAM,sBAAsB;AAAA,EACjC,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AACP;AAEO,IAAM,kBAAkB;AAAA,EAC7B,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AACP;AAGO,IAAM,yBAAyB;AAE/B,IAAM,cAAc;AAEpB,IAAM,qBAAqB;AAE3B,IAAM,oBAAoB;AAE1B,IAAM,sBAAsB;AAE5B,IAAM,qBAAqB;AAE3B,IAAM,+BAA+B,GAAG,kBAAkB;AAE1D,IAAM,oBAAoB;AAE1B,IAAM,kBAAkB;AAExB,IAAM,0BAAgE;AAAA,EAC3E,SAAS;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,SAAS;AAAA,EACX;AAAA,EACA,SAAS;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,SAAS;AAAA,EACX;AACF;AAEO,IAAK,+BAAL,kBAAKA,kCAAL;AACL,EAAAA,8BAAA,kBAAe;AACf,EAAAA,8BAAA,aAAU;AACV,EAAAA,8BAAA,SAAM;AACN,EAAAA,8BAAA,YAAS;AAJC,SAAAA;AAAA,GAAA;AAOL,IAAM,uCAGT;AAAA,EACF,CAAC,kCAAyC,GAAG;AAAA,IAC3C,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,MAAM;AAAA,EACR;AAAA,EACA,CAAC,uBAAoC,GAAG;AAAA,IACtC,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,MAAM;AAAA,EACR;AAAA,EACA,CAAC,eAAgC,GAAG;AAAA,IAClC,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,MAAM;AAAA,EACR;AAAA,EACA,CAAC,qBAAmC,GAAG;AAAA,IACrC,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,MAAM;AAAA,EACR;AACF;AAEO,IAAM,iBAAqC;AAAA,EAChD,OAAO;AAAA,EACP,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,SAAS;AACX;AAEO,IAAM,iBAAqC;AAAA,EAChD,OAAO;AAAA,EACP,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,SAAS;AACX;","names":["AccountDisplayPreferenceType"]}